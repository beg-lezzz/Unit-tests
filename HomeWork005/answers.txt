*Задание 1. *Представьте, что вы работаете над разработкой простого приложения для записной книжки, которое позволяет пользователям добавлять, редактировать и удалять контакты.
Ваша задача - придумать как можно больше различных тестов (юнит-тесты, интеграционные тесты, сквозные тесты) для этого приложения. Напишите название каждого теста, его тип и краткое описание того, что этот тест проверяет.

- Юнит-тест: testAddContact()
   Проверяет возможность добавления нового контакта в записную книжку.

- Юнит-тест: testEditContact()
   Проверяет возможность редактирования существующего контакта в записной книжке.

- Юнит-тест: testDeleteContact()
   Проверяет возможность удаления контакта из записной книжки.

- Юнит-тест: testGetAllContacts()
   Проверяет корректность получения всех контактов из записной книжки.

- Юнит-тест: testGetContactById()
   Проверяет корректность получения контакта по его идентификатору.

- Интеграционный тест: testAddContact()
   Проверяет сценарий добавления контакта

- Интеграционный тест: testEditContact()
   Проверяет сценарий редактирования контакта

- Интеграционный тест: testDeleteContact()
   Проверяет возможность удаления контакта

- Интеграционный тест: testGetAllContactsSortedByName()
   Проверяет корректность получения всех контактов из записной книжки, отсортированных по имени.

- Интеграционный тест: testGetAllContactsSortedByNumber()
   Проверяет корректность получения всех контактов из записной книжки, отсортированных по номеру телефона.

- Интеграционный тест: testGetContactByPhone()
   Проверяет корректность получения контакта по его номеру телефона.

- Интеграционный тест: testContactRepository()
   Проверяет корректность работы приложения с репозиторием (БД).

- Сквозной тест: testAddContactWithBadData()
    Проверяет обработку некорректных данных при добавлении контакта.

- Сквозной тест: testDeleteNonExistingContact()
    Проверяет обработку попытки удаления несуществующего контакта.


Задание 2. *Ниже список тестовых сценариев. Ваша задача - определить тип каждого теста (юнит-тест, интеграционный тест, сквозной тест) и объяснить, почему вы так решили.
Проверка того, что функция addContact корректно добавляет новый контакт в список контактов"".
""Проверка того, что при добавлении контакта через пользовательский интерфейс, контакт корректно отображается в списке контактов"".
""Проверка полного цикла работы с контактом: создание контакта, его редактирование и последующее удаление"".

- Тест "Проверка того, что функция addContact корректно добавляет новый контакт в список контактов" является юнит-тестом. Юнит-тесты проверяют корректность работы отдельных модулей кода. В данном случае, функция addContact является отдельным модулем, и тест проверяет его функциональность.

- Тест "Проверка того, что при добавлении контакта через пользовательский интерфейс, контакт корректно отображается в списке контактов" является интеграционным тестом. Интеграционные тесты проверяют взаимодействие нескольких модулей системы. В данном случае, тест проверяет связь между пользовательским интерфейсом и списком контактов. 

- Тест "Проверка полного цикла работы с контактом: создание контакта, его редактирование и последующее удаление" является сквозным тестом. Сквозные тесты проверяют работу всей системы от начала до конца. В данном случае, тест проверяет полный жизненный цикл контакта, и подразумевает взаимодействие нескольких модулей, таких как создание контакта, редактирование и удаление.

